Metadata-Version: 2.1
Name: our_package_name
Version: 1.0.0
Summary: A package to plot interactive dynamic models for Code/Astro 2024
Author-email: "Garcia-Cifuentes, K." <stivengarcia7113@gmail.com>, Bretton <Bretton@example.com>, Elizabeth <Elizabeth@example.com>, Alcatraz <Alcatraz@example.com>, Dionysis <Dionysis@example.com>
Maintainer-email: Keneth Garcia <stivengarcia7113@gmail.com>
License: MIT License
        
        Copyright (c) 2024 Bretton Simpson
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
        
Project-URL: homepage, https://github.com/brettonsimpson/group-13
Project-URL: documentation, https://github.com/brettonsimpson/group-13/tree/Keneth_updates/docs
Keywords: Galactic Dynamics,Rotation Curves,Plummer Model,Galaxies,Extragalactic Astronomy
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Education
Classifier: Intended Audience :: Information Technology
Classifier: Intended Audience :: Science/Research
Classifier: Topic :: Scientific/Engineering :: Astronomy
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: Implementation
Classifier: Natural Language :: English
Classifier: Operating System :: Microsoft :: Windows
Classifier: Operating System :: POSIX :: Linux
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: matplotlib>=3.7.1
Requires-Dist: numpy>=1.24.2
Requires-Dist: pandas>=2.0.0
Requires-Dist: scipy>=1.10.1

![Logo](path_to_the_logo/logo.jpeg)  

# group-13 Project

**Package name** is a Python 3 package to visualize the orbital radius for the Milky Way galaxy, in an interacting way. It is distributed over the MIT License. This Python package is associated with the main activites of [Code/Astro 2024](https://github.com/semaphoreP/codeastro).

# Statement of need
Understanding the dynamics and structure of the Milky Way galaxy is a fundamental goal in astrophysics. A critical aspect of this is analyzing the rotation curve, which represents the orbital velocity of stars and gas as a function of their distance from the galactic center. Discrepancies between observed rotation curves and those predicted by visible matter alone have led to the hypothesis of dark matter, necessitating more sophisticated models. Traditional models like the Triaxial NFW Potential, Plummer Potential, and Exponential Potential offer different perspectives on the galaxy's mass distribution. However, researchers and students often face challenges in visualizing and comparing these models with observed data, highlighting the need for an intuitive, interactive tool to aid in the exploration and understanding of galactic dynamics.

Our Python package addresses this need by providing an interactive platform to visualize and analyze the orbital radius as a function of velocity for the Milky Way galaxy. Users can adjust parameters for the Triaxial NFW, Plummer, and Exponential potentials to see how each model affects the simulated velocity profile. This tool allows for direct comparison with observed velocity profiles, facilitating a deeper understanding of galactic dynamics and the influence of different mass distribution models. By making these complex models accessible and manipulatable, our package serves as an additional resource for both educational and research purposes in astrophysics.

# Attribution
If you use this code in your research work, please refer to the package by its name and cite the authors!. Any question, please start an issue!.

# Dependencies and Installation

This repository requires Python 3.10 or high, and a list of packages downloaded automatically ([numpy](https://github.com/numpy/numpy), [scipy](https://scipy.org/), etc.). In addition, it is required to install all the dependencies related to [plotly](https://plotly.com/python/).

# Installing **Package_Name**

You can install **Package_Name** on Windows, MacOs and Linux distributions. In both cases, we assume that you have already installed the dependencies and the appropriate Python version. Now, there are two options to install **ClassiPyGRB**:

## GitHub

You can install the latest sources from **ClassiPyGRB** by cloning the repository directly from GitHub:
```
$ git clone https://github.com/brettonsimpson/group-13
$ cd package_name
$ pip install .
```
Or, instead, use `pip` with the path to the repository:
```
$ pip install package_name@git+https://github.com/brettonsimpson/group-13
```

## PyPI
A stable compiled version of **ClassiPyGRB** is available on [PyPI](https://pypi.org/). You can install it by running:
```
$ pip install package_name
```

## Testing

If you have installed the development version of **Package_Name** or cloned the complete source code (e.g., from the GitHub repository), you can run the tests by executing the following commands:

```
$ cd package_name
$ python -m unittest -v
```
